// Mocks generated by Mockito 5.4.6 from annotations
// in animals/test/features/home/domain/usecases/search_breeds_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:animals/core/errors/failures.dart' as _i5;
import 'package:animals/features/home/domain/entities/breed_entity.dart' as _i6;
import 'package:animals/features/home/domain/repositories/breeds_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BreedsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreedsRepository extends _i1.Mock implements _i3.BreedsRepository {
  MockBreedsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedEntity>>> getBreeds({
    required int? limit,
    required int? page,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getBreeds, [], {#limit: limit, #page: page}),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.BreedEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BreedEntity>>(
                    this,
                    Invocation.method(#getBreeds, [], {
                      #limit: limit,
                      #page: page,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedEntity>>> searchBreeds({
    required String? query,
    required bool? attachImage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchBreeds, [], {
              #query: query,
              #attachImage: attachImage,
            }),
            returnValue:
                _i4.Future<
                  _i2.Either<_i5.Failure, List<_i6.BreedEntity>>
                >.value(
                  _FakeEither_0<_i5.Failure, List<_i6.BreedEntity>>(
                    this,
                    Invocation.method(#searchBreeds, [], {
                      #query: query,
                      #attachImage: attachImage,
                    }),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.BreedEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> addFavorite({
    required String? imageId,
    required String? subId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addFavorite, [], {
              #imageId: imageId,
              #subId: subId,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#addFavorite, [], {
                  #imageId: imageId,
                  #subId: subId,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> removeFavorite(
    String? favoriteId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeFavorite, [favoriteId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#removeFavorite, [favoriteId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<String>>> getFavorites() =>
      (super.noSuchMethod(
            Invocation.method(#getFavorites, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<String>>>.value(
                  _FakeEither_0<_i5.Failure, List<String>>(
                    this,
                    Invocation.method(#getFavorites, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<String>>>);
}
